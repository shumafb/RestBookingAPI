from fastapi import FastAPI
from datetime import datetime
from app.routers import tables, reservations
from app.logger import logger

app = FastAPI(title="–°–µ—Ä–≤–∏—Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–æ–ª–∏–∫–æ–≤")

# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã
app.include_router(tables.router)
app.include_router(reservations.router, prefix="/reservations", tags=["reservations"])

@app.get("/", tags=["health"])
async def root():
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞
    """
    current_time = datetime.now().strftime("%d.%–º.%Y %H:%–ú:%S")
    status = {
        "—Å—Ç–∞—Ç—É—Å": "–∞–∫—Ç–∏–≤–µ–Ω",
        "–≤—Ä–µ–º—è_—Å–µ—Ä–≤–µ—Ä–∞": current_time,
        "—Å–æ–æ–±—â–µ–Ω–∏–µ": "–°–µ—Ä–≤–∏—Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–æ–ª–∏–∫–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç",
        "–≤–µ—Ä—Å–∏—è": "1.0.0"
    }
    logger.info(f"üëã –ó–∞–ø—Ä–æ—Å —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞: {status}")
    return status

@app.get("/health", tags=["health"])
async def health_check():
    """
    –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞
    """
    try:
        uptime = "–†–∞–±–æ—Ç–∞–µ—Ç"  # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–±–æ—Ç—ã
        status = {
            "—Å—Ç–∞—Ç—É—Å": "OK",
            "–≤—Ä–µ–º—è_–ø—Ä–æ–≤–µ—Ä–∫–∏": datetime.now().strftime("%d.%–º.%Y %H:%–ú:%S"),
            "—Å–æ—Å—Ç–æ—è–Ω–∏–µ_—Å–µ—Ä–≤–∏—Å–∞": uptime,
            "–∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã": {
                "api": "–¥–æ—Å—Ç—É–ø–Ω–æ",
                "–±–∞–∑–∞_–¥–∞–Ω–Ω—ã—Ö": "–ø–æ–¥–∫–ª—é—á–µ–Ω–∞"
            }
        }
        logger.info("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞: –≤—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ")
        return status
    except Exception as e:
        error_status = {
            "—Å—Ç–∞—Ç—É—Å": "–æ—à–∏–±–∫–∞",
            "–≤—Ä–µ–º—è_–ø—Ä–æ–≤–µ—Ä–∫–∏": datetime.now().strftime("%d.%–º.%Y %H:%–ú:%S"),
            "–æ—à–∏–±–∫–∞": str(e)
        }
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞: {str(e)}")
        return error_status